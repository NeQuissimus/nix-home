#!/bin/sh

for i in "$@"
do
case $i in
    --version)
	echo "0.2.0";
	exit
    ;;
    *)
		echo "nix-home: usage"
		echo "	--version - print version and exit"
		exit
    ;;
esac
done

if [ ! -e $HOME/default.nix ]; then
	echo "No $HOME/default.nix file found, refusing to run"
	exit -1
fi

mkdir -p $HOME/.nix-home
ROOT=$HOME/.nix-home/current-home/

function fail() {
	echo "Failed to run"
	rm $TMPFILE
	exit 255
}

# enumerate over every file in current-home, store in TMPFILE
TMPFILE=`mktemp`
prefix=$ROOT
if [ -e /var/run/user/$UID/current-home ]; then
	find /var/run/user/$UID/current-home/ -type f > $TMPFILE
	find /var/run/user/$UID/current-home/ -type l >> $TMPFILE
elif [ -e $ROOT ]; then
	find $ROOT -type f > $TMPFILE
	find $ROOT -type l >> $TMPFILE
fi

# remove current home
# TODO: track generations
#rm -f /var/run/user/$UID/current-home

# replace current-home folder
echo "nix-build -I NIXHOME -o $ROOT $HOME || fail"
nix-build -I NIXHOME -o $ROOT $HOME || fail

# link all files in current home to $HOME
for x in `find $ROOT -type l`; do
	dest=${x#$prefix}

	if [ ! -h "$HOME/$dest" ]; then
		if [ -f "$HOME/$dest" ]; then
			echo "$dest is a regular file  refusing to overwrite with link"
		elif [ -d "$HOME/$dest" ]; then
			echo "$dest is a regular directory, refusing to overwrite with link"
		else
			echo "linking $x to $dest"
			mkdir -p `dirname $HOME/$dest`
			ln -sf $x -t `dirname $HOME/$dest`
		fi
	else
		echo "linking $x to $dest"
		mkdir -p `dirname $HOME/$dest`
		ln -sf $x -t `dirname $HOME/$dest`
	fi
done

for x in `find $ROOT -type f`; do
	dest=${x#$prefix}
	echo "linking $x to $dest"
	ln -sf $x -t `dirname $HOME/$dest`
done

# iterate over all files in TMPFILE
for x in `cat $TMPFILE`; do
	if [ ! -e $x ]; then
		echo "$x does not exist in new home"
		dest=${x#$prefix}

		if [ -h "$HOME/$dest" ]; then
			echo "unlinking $HOME/$dest"
			rm $HOME/$dest
		else
			echo "$HOME/$dest is not a symbolic link, skipping"
		fi
	fi
done

# cleanup
rm $TMPFILE
